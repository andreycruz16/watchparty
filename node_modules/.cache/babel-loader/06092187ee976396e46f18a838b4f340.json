{"ast":null,"code":"'use strict';\n\nvar _defineProperty = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/defineProperty.js\").default;\n\nvar _classCallCheck = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/home/runner/work/watchparty/watchparty/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar XmlNode = /*#__PURE__*/function () {\n  function XmlNode(tagname) {\n    _classCallCheck(this, XmlNode);\n\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n\n    this[\":@\"] = {}; //attributes map\n  }\n\n  _createClass(XmlNode, [{\n    key: \"add\",\n    value: function add(key, val) {\n      // this.child.push( {name : key, val: val, isCdata: isCdata });\n      this.child.push(_defineProperty({}, key, val));\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild(node) {\n      if (node[\":@\"] && Object.keys(node[\":@\"]).length > 0) {\n        var _this$child$push2;\n\n        this.child.push((_this$child$push2 = {}, _defineProperty(_this$child$push2, node.tagname, node.child), _defineProperty(_this$child$push2, \":@\", node[\":@\"]), _this$child$push2));\n      } else {\n        this.child.push(_defineProperty({}, node.tagname, node.child));\n      }\n    }\n  }]);\n\n  return XmlNode;\n}();\n\n;\nmodule.exports = XmlNode;","map":{"version":3,"sources":["/home/runner/work/watchparty/watchparty/node_modules/fast-xml-parser/src/xmlparser/xmlNode.js"],"names":["XmlNode","tagname","child","key","val","push","node","Object","keys","length","module","exports"],"mappings":"AAAA;;;;;;;;IAEMA,O;AACJ,mBAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,KAAL,GAAa,EAAb,CAFmB,CAEF;;AACjB,SAAK,IAAL,IAAa,EAAb,CAHmB,CAGF;AAClB;;;;WACD,aAAIC,GAAJ,EAAQC,GAAR,EAAY;AACV;AACA,WAAKF,KAAL,CAAWG,IAAX,qBAAmBF,GAAnB,EAAyBC,GAAzB;AACD;;;WACD,kBAASE,IAAT,EAAe;AACb,UAAGA,IAAI,CAAC,IAAD,CAAJ,IAAcC,MAAM,CAACC,IAAP,CAAYF,IAAI,CAAC,IAAD,CAAhB,EAAwBG,MAAxB,GAAiC,CAAlD,EAAoD;AAAA;;AAClD,aAAKP,KAAL,CAAWG,IAAX,6DAAoBC,IAAI,CAACL,OAAzB,EAAmCK,IAAI,CAACJ,KAAxC,sCAAgD,IAAhD,EAAuDI,IAAI,CAAC,IAAD,CAA3D;AACD,OAFD,MAEK;AACH,aAAKJ,KAAL,CAAWG,IAAX,qBAAoBC,IAAI,CAACL,OAAzB,EAAmCK,IAAI,CAACJ,KAAxC;AACD;AACF;;;;;;AACF;AAGDQ,MAAM,CAACC,OAAP,GAAiBX,OAAjB","sourcesContent":["'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;"]},"metadata":{},"sourceType":"script"}