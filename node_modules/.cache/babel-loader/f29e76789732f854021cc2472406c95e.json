{"ast":null,"code":"var defaultOptions = {\n  preserveOrder: false,\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  removeNSPrefix: false,\n  // remove NS from tag name or attribute name if true\n  allowBooleanAttributes: false,\n  //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseTagValue: true,\n  parseAttributeValue: false,\n  trimValues: true,\n  //Trim string values of tag and attributes\n  cdataPropName: false,\n  numberParseOptions: {\n    hex: true,\n    leadingZeros: true\n  },\n  tagValueProcessor: function tagValueProcessor(tagName, val) {\n    return val;\n  },\n  attributeValueProcessor: function attributeValueProcessor(attrName, val) {\n    return val;\n  },\n  stopNodes: [],\n  //nested tags will not be parsed even for errors\n  alwaysCreateTextNode: false,\n  isArray: function isArray() {\n    return false;\n  },\n  commentPropName: false,\n  unpairedTags: [],\n  processEntities: true,\n  htmlEntities: false,\n  ignoreDeclaration: false,\n  ignorePiTags: false\n};\n\nvar buildOptions = function buildOptions(options) {\n  return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","map":{"version":3,"sources":["/home/runner/work/watchparty/watchparty/node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js"],"names":["defaultOptions","preserveOrder","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","removeNSPrefix","allowBooleanAttributes","parseTagValue","parseAttributeValue","trimValues","cdataPropName","numberParseOptions","hex","leadingZeros","tagValueProcessor","tagName","val","attributeValueProcessor","attrName","stopNodes","alwaysCreateTextNode","isArray","commentPropName","unpairedTags","processEntities","htmlEntities","ignoreDeclaration","ignorePiTags","buildOptions","options","Object","assign","exports"],"mappings":"AACA,IAAMA,cAAc,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,mBAAmB,EAAE,IAFF;AAGnBC,EAAAA,mBAAmB,EAAE,KAHF;AAInBC,EAAAA,YAAY,EAAE,OAJK;AAKnBC,EAAAA,gBAAgB,EAAE,IALC;AAMnBC,EAAAA,cAAc,EAAE,KANG;AAMI;AACvBC,EAAAA,sBAAsB,EAAE,KAPL;AAOY;AAC/B;AACAC,EAAAA,aAAa,EAAE,IATI;AAUnBC,EAAAA,mBAAmB,EAAE,KAVF;AAWnBC,EAAAA,UAAU,EAAE,IAXO;AAWD;AAClBC,EAAAA,aAAa,EAAE,KAZI;AAanBC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,GAAG,EAAE,IADa;AAElBC,IAAAA,YAAY,EAAE;AAFI,GAbD;AAiBnBC,EAAAA,iBAAiB,EAAE,2BAASC,OAAT,EAAkBC,GAAlB,EAAuB;AACxC,WAAOA,GAAP;AACD,GAnBkB;AAoBnBC,EAAAA,uBAAuB,EAAE,iCAASC,QAAT,EAAmBF,GAAnB,EAAwB;AAC/C,WAAOA,GAAP;AACD,GAtBkB;AAuBnBG,EAAAA,SAAS,EAAE,EAvBQ;AAuBJ;AACfC,EAAAA,oBAAoB,EAAE,KAxBH;AAyBnBC,EAAAA,OAAO,EAAE;AAAA,WAAM,KAAN;AAAA,GAzBU;AA0BnBC,EAAAA,eAAe,EAAE,KA1BE;AA2BnBC,EAAAA,YAAY,EAAE,EA3BK;AA4BnBC,EAAAA,eAAe,EAAE,IA5BE;AA6BnBC,EAAAA,YAAY,EAAE,KA7BK;AA8BnBC,EAAAA,iBAAiB,EAAE,KA9BA;AA+BnBC,EAAAA,YAAY,EAAE;AA/BK,CAAvB;;AAkCA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAASC,OAAT,EAAkB;AACnC,SAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhC,cAAlB,EAAkC8B,OAAlC,CAAP;AACH,CAFD;;AAIAG,OAAO,CAACJ,YAAR,GAAuBA,YAAvB;AACAI,OAAO,CAACjC,cAAR,GAAyBA,cAAzB","sourcesContent":["\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;"]},"metadata":{},"sourceType":"script"}